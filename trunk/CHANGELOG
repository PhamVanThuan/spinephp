Spine PHP Change Log (http://www.spinephp.org/)
---------------------------------------------------------------------------------------

THERE IS NO OFFICIAL/STABLE RELEASE OF SPINE AT THIS TIME

(12th August 2010)
-----------------------------------------------
[fixed]: MySQL Class now acts more like MySQLi. Created new classes for MySQL to allow
creation of query objects and prepared statement objects.
[fixed]: MySQLi is now not loaded by PDO, fixing the invalid driver issue.
[new]: Added Model::get_param to allow cleaner loading of a parameter inside models.
[deleted]: Removed the MySQLi driver as the MySQL driver now mimics MySQLi as closely
as it can.
[changed]: Database config items now in their own database.php config file.

(11th August 2010)
-----------------------------------------------
[changed]: Update the MySQL class, changed name to DBDriver to allow multiple drivers.
[new]: Added PDO support, to allow a better database layer for portability of applications.
If PDO is unavailable it will revert to the generic classes that were created.

(7th August 2010)
-----------------------------------------------
[changed]: Controllers can now be placed at any depth within /application/controllers
[changed]: Controllers no longer require the directories to be prepended to the class
name of the controller.

(5th August 2010)
-----------------------------------------------
[changed]: Router class changed to support user-defined routes to prevent bad URLs.
[new]: Request class handles input request, special requests and URL building.
[changed]: Error template is now it's own template, not part of a template.
[fixed]: User defined routes can now specify controllers in subdirectories.
[new]: URI can be constructed from a route.
[fixed]: General.default_controller was not being used in the default route.
[fixed]: All bugs inside HTML Helper.

(4th August 2010)
-----------------------------------------------
[new]: Inflector class added.
[changed]: What were plugins are now called extenders. Plugins have been redone.
[new]: Extender class added.
[new]: Thumbnail plugin created, this is more of an example plugin.

(3rd August 2010)
-----------------------------------------------
[changed]: Folder structure has been updated to allow better understanding of where
things should belong.
[changed]: A template parser is no longer supported, however support for Smarty will
be added.
[new]: Libraries can be autoloaded by a controller via the $libs property.
[new]: Basic Smarty implementation. Smarty cannot use Helpers, both in views and in 
templates. Smarty can be unhooked, which will call a method supplied in params unhook.

(1st August 2010)
-----------------------------------------------
[changed]: The entire system has been re-done as a static system to allow easier
access to the different libraries.
[changed]: File names no longer have .view, .model, .section and .controller
file extensions, it's just .php.
[new]: install.php checks environment for correct configuration.

(29th July 2010)
-----------------------------------------------
[new]: changelog
[new]: Spine::Hooks. Hooks can now be added, either via plugins or as files located
in /application/hooks.
[new]: Spine::Plugin. Plugins can be implemented into the system, using hooks, being
called in a controller or by using helpers.
[new]: Template Engine support added for engines such as Smarty. Currently only been
tested to work with the Smarty engine.
[changed]: Registery has been changed to Spine.
[fixed]: Spine::load_library, useless parameters removed, replaced by functions that
can do the same thing.
[changed]: Hook Controller.afterConstruct is now located in Spine::Router, after the
controller has been instantiated.
[changed]: View::load_plugin renamed to View::plugin.
[changed]: View::$loaded renamed to View::$views.
[changed]: Helpers::load_helpers renamed to Helpers::load.
[changed]: Controller::load_model renamed to Controller::load.
[new]: Added Controller::prepare.
[changed]: Render is no longer done automatically, user must call Controller::prepare
to initiate the rendering process.
[fixed]: Bug when requesting a controller twice would attempt to reload the file.